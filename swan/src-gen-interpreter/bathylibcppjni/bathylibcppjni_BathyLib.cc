/* DO NOT EDIT THIS FILE - it is machine generated */

#include "bathylibcppjni_BathyLib.h"
#include "BathyLib.h"

#ifdef __cplusplus
extern "C" {
#endif

/********** BATHYLIB **********/

static BathyLib* getBathyLib
(JNIEnv *env, jobject self)
{
	jclass cls = env->GetObjectClass(self);
	if (!cls)
		env->FatalError("GetObjectClass failed");

	jfieldID nativeObjectPointerID = env->GetFieldID(cls, "nativeObjectPointer", "J");
	if (!nativeObjectPointerID)
		env->FatalError("GetFieldID failed");

	jlong nativeObjectPointer = env->GetLongField(self, nativeObjectPointerID);
	return reinterpret_cast<BathyLib*>(nativeObjectPointer);
}

int JNI_OnLoad(JavaVM *vm, void *reserved)
{
	std::cout << "libbathylibcppjni.so loaded" << std::endl;
	return JNI_VERSION_1_1;
}

void JNI_OnUnload(JavaVM *vm, void *reserved)
{
	std::cout << "libbathylibcppjni.so unloaded" << std::endl;
}

JNIEXPORT jlong JNICALL Java_bathylibcppjni_BathyLib_nativeNew
(JNIEnv *env, jobject self)
{
	BathyLib *_self = new BathyLib();
	return reinterpret_cast<jlong>(_self);
}

JNIEXPORT void JNICALL Java_bathylibcppjni_BathyLib_nativeDelete
(JNIEnv *env, jobject self, jlong nativeObjectPointer)
{
	BathyLib* _self = reinterpret_cast<BathyLib*>(nativeObjectPointer);
	delete _self;
}

JNIEXPORT void JNICALL Java_bathylibcppjni_BathyLib_jsonInit
(JNIEnv *env, jobject self, jstring jsonContent)
{
	BathyLib* _self = getBathyLib(env, self);
	const char *nativeJsonContent = env->GetStringUTFChars(jsonContent, 0);
	_self->jsonInit(nativeJsonContent);
	env->ReleaseStringUTFChars(jsonContent, nativeJsonContent);
}

JNIEXPORT jdouble JNICALL Java_bathylibcppjni_BathyLib_nextDepth
(JNIEnv *env, jobject self)
{
	BathyLib* _self = getBathyLib(env, self);
	// native method call
	auto c_ret = _self->nextDepth();
	// c_ret to ret
	jdouble ret = c_ret;
	return ret;
}

JNIEXPORT jdouble JNICALL Java_bathylibcppjni_BathyLib_nextWaveHeight
(JNIEnv *env, jobject self)
{
	BathyLib* _self = getBathyLib(env, self);
	// native method call
	auto c_ret = _self->nextWaveHeight();
	// c_ret to ret
	jdouble ret = c_ret;
	return ret;
}

#ifdef __cplusplus
}
#endif
